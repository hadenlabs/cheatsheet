# kubectl get

> Get Kubernetes objects and resources.
> More information: <https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#get>.

### Get Kubernetes objects defined in a YAML manifest:

kubectl get -f {{path/to/manifest}}.yaml

## Namespaces

### Get all namespaces in the current cluster:

kubectl get namespaces

## Services

### List all services in the namespace

kubectl get services

### List Services Sorted by Name

kubectl get services --sort-by=.metadata.name

### Get services in a specified namespace:

kubectl get services -n {{namespace}}

## Nodes

### Get nodes in a specified namespace:

kubectl get nodes -n {{namespace}}

### Get ExternalIPs of all nodes

kubectl get nodes -o jsonpath='{.items[*].status.addresses[?(@.type=="ExternalIP")].address}'

### Get all worker nodes (use a selector to exclude results that have a label
### named 'node-role.kubernetes.io/master')

kubectl get node --selector='!node-role.kubernetes.io/master'

### Check which nodes are ready
JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}' \
 && kubectl get nodes -o jsonpath="$JSONPATH" | grep "Ready=True"

## Pods

### Get the version label of all pods with label app=cassandra
kubectl get pods --selector=app={{label-name}} -o \
  jsonpath='{.items[*].metadata.labels.version}'

### Show labels for all pods (or any other Kubernetes object that supports labelling)

kubectl get pods --show-labels

### Get all running pods in the namespace

kubectl get pods --field-selector=status.phase=Running

### Get a pod's YAML

kubectl get pod my-pod -o yaml

### List all pods in the namespace

kubectl get pods

### List all pods in all namespaces

kubectl get pods --all-namespaces

### Get pods in a specified namespace:

kubectl get pods -n {{namespace}}

### List all pods in the current namespace, with more details

kubectl get pods -o wide

### List all containerIDs of initContainer of all pods
### Helpful when cleaning up stopped containers, while avoiding removal of initContainers.

kubectl get pods --all-namespaces -o jsonpath='{range .items[*].status.initContainerStatuses[*]}{.containerID}{"\n"}{end}' | cut -d/ -f3

### List all Secrets currently in use by a pod

kubectl get pods -o json | jq '.items[].spec.containers[].env[]?.valueFrom.secretKeyRef.name' | grep -v null | sort | uniq

### List pods Sorted by Restart Count

kubectl get pods --sort-by='.status.containerStatuses[0].restartCount'

### List Names of Pods that belong to Particular RC
### "jq" command useful for transformations that are too complex for jsonpath, it can be found at https://stedolan.github.io/jq/

sel=${$(kubectl get rc my-rc --output=json | jq -j '.spec.selector | to_entries | .[] | "\(.key)=\(.value),"')%?}
echo $(kubectl get pods --selector=$sel --output=jsonpath={.items..metadata.name})

## events

### List Events sorted by timestamp

kubectl get events --sort-by=.metadata.creationTimestamp

## Deployments

### Get deployments in a specified namespace:

kubectl get deployments -n {{namespace}}

### List a particular deployment

kubectl get deployment {{name-deployment}}

## Secrets

### Output decoded secrets without external tools

kubectl get secret my-secret -o go-template='{{range $k,$v := .data}}{{"### "}}{{$k}}{{"\n"}}{{$v|base64decode}}{{"\n\n"}}{{end}}'

## PersistentVolumes

### List PersistentVolumes sorted by capacity

kubectl get pv --sort-by=.spec.capacity.storage

## ConfigMap

### Retrieve the value of a key with dots, e.g. 'ca.crt'

kubectl get configmap myconfig -o jsonpath='{.data.ca\.crt}'
